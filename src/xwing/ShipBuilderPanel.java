/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package xwing;

import java.awt.FlowLayout;
import java.awt.Graphics;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.border.EtchedBorder;

/**
 *
 * @author Michael
 */
public class ShipBuilderPanel extends javax.swing.JPanel implements Refreshable {

    private boolean playerSquadFinalized;
    private boolean opponentSquadFinalized;
    
    /**
     * Creates new form ShipBuilderPanel
     */
    public ShipBuilderPanel() {
        initComponents();
    }

    
    public void refresh() {
        
        if(NetworkManager.isOnlineGame()) {
            addOpponentShipButton.setVisible(false);
            opponentSquadPointsUsed.setVisible(false);
            finalizeSquadButton1.setVisible(false);
            this.jPanel3.setVisible(false);
        }
        int points = playerSquad.getSquadPointsUsed();
        squadPointsUsed.setText(new Integer(points).toString());
        
        int points2 = opponentSquad.getSquadPointsUsed();
        opponentSquadPointsUsed.setText(new Integer(points2).toString());
        
        
    }
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        opponentSquadPointsUsed = new javax.swing.JTextField();
        addShipButton = new javax.swing.JButton();
        finalizeSquadButton = new javax.swing.JButton();
        addOpponentShipButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        squadPointsUsed = new javax.swing.JTextField();
        finalizeSquadButton1 = new javax.swing.JButton();
        ShipsDisplay = new javax.swing.JPanel();
        opponentSquad = new xwing.SquadDisplay();
        playerSquad = new xwing.SquadDisplay();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(800, 800));
        setPreferredSize(new java.awt.Dimension(600, 427));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Squad Points", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        opponentSquadPointsUsed.setEditable(false);
        opponentSquadPointsUsed.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        opponentSquadPointsUsed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        opponentSquadPointsUsed.setText("100");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(opponentSquadPointsUsed)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(opponentSquadPointsUsed)
                .addContainerGap())
        );

        addShipButton.setText("Add New Ship");
        addShipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addShipButtonActionPerformed(evt);
            }
        });

        finalizeSquadButton.setText("Finalize Squad");
        finalizeSquadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeSquadButtonActionPerformed(evt);
            }
        });

        addOpponentShipButton.setText("Add New Ship");
        addOpponentShipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOpponentShipButtonActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Squad Points", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        squadPointsUsed.setEditable(false);
        squadPointsUsed.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        squadPointsUsed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        squadPointsUsed.setText("100");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(squadPointsUsed, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(squadPointsUsed, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
        );

        finalizeSquadButton1.setText("Finalize Squad");
        finalizeSquadButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeSquadButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addShipButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(finalizeSquadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addOpponentShipButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(finalizeSquadButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(addOpponentShipButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finalizeSquadButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                .addComponent(addShipButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finalizeSquadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName("Points Left");

        ShipsDisplay.setMaximumSize(new java.awt.Dimension(600, 300));

        opponentSquad.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Opponent Squad", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        opponentSquad.setMaximumSize(new java.awt.Dimension(32767, 380));
        opponentSquad.setMinimumSize(new java.awt.Dimension(21, 380));
        opponentSquad.setPreferredSize(new java.awt.Dimension(804, 380));

        playerSquad.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Player Squad", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        playerSquad.setMaximumSize(new java.awt.Dimension(32767, 380));
        playerSquad.setMinimumSize(new java.awt.Dimension(21, 380));
        playerSquad.setPreferredSize(new java.awt.Dimension(400, 380));

        javax.swing.GroupLayout ShipsDisplayLayout = new javax.swing.GroupLayout(ShipsDisplay);
        ShipsDisplay.setLayout(ShipsDisplayLayout);
        ShipsDisplayLayout.setHorizontalGroup(
            ShipsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShipsDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ShipsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerSquad, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                    .addComponent(opponentSquad, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        ShipsDisplayLayout.setVerticalGroup(
            ShipsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShipsDisplayLayout.createSequentialGroup()
                .addComponent(opponentSquad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(playerSquad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ShipsDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ShipsDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addShipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addShipButtonActionPerformed
        ShipForm form = new ShipForm();
        form.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
        playerSquad.addShip(new TieFighter(0,0,0,0));
        playerSquad.updateShipForms();
        this.validate();
        
    }//GEN-LAST:event_addShipButtonActionPerformed

    private void addOpponentShipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOpponentShipButtonActionPerformed
        ShipForm form = new ShipForm();
        form.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
        opponentSquad.addShip(new TieFighter(0,0,0,0));
        opponentSquad.updateShipForms();
        this.validate();
    }//GEN-LAST:event_addOpponentShipButtonActionPerformed

    private void finalizeSquadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeSquadButtonActionPerformed
        playerSquadFinalized = true;
        finalizeSquadButton.setEnabled(false);
        addShipButton.setEnabled(false);
        if(opponentSquadFinalized) {
            GameManager.playerSquadron = playerSquad.getShips();
            GameManager.opponentSquadron = opponentSquad.getShips();
            GameManager.curPhase = GameManager.GamePhase.SquadPlacement;
        }
    }//GEN-LAST:event_finalizeSquadButtonActionPerformed

    private void finalizeSquadButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeSquadButton1ActionPerformed
        opponentSquadFinalized = true;
        finalizeSquadButton1.setEnabled(false);
        addOpponentShipButton.setEnabled(false);
        if(playerSquadFinalized) {
            GameManager.playerSquadron = playerSquad.getShips();
            GameManager.opponentSquadron = opponentSquad.getShips();
            GameManager.curPhase = GameManager.GamePhase.SquadPlacement;
        }
    }//GEN-LAST:event_finalizeSquadButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ShipsDisplay;
    private javax.swing.JButton addOpponentShipButton;
    private javax.swing.JButton addShipButton;
    private javax.swing.JButton finalizeSquadButton;
    private javax.swing.JButton finalizeSquadButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private xwing.SquadDisplay opponentSquad;
    private javax.swing.JTextField opponentSquadPointsUsed;
    private xwing.SquadDisplay playerSquad;
    private javax.swing.JTextField squadPointsUsed;
    // End of variables declaration//GEN-END:variables


}
